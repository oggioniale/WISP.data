[{"path":"https://github.com/oggioniale/WISP.data/articles/exampleOfFunctions.html","id":"provide-the-account-of-your-station","dir":"Articles","previous_headings":"","what":"Provide the account of your station","title":"Example of WISP.data functions","text":"","code":"userid <- Sys.getenv(\"WISP_IREA_USERID\") pwd <- Sys.getenv(\"WISP_IREA_PSW\")"},{"path":"https://github.com/oggioniale/WISP.data/articles/exampleOfFunctions.html","id":"get-data-from-the-wisp-station-server-for-a-multiple-dates","dir":"Articles","previous_headings":"","what":"Get data from the WISP station server for a multiple dates","title":"Example of WISP.data functions","text":"want download data single date, consider using function wisp_get_reflectance_data() instead. function save_csv parameter set TRUE, function save reflectance data .csv file ‘output’ folder within working directory.","code":"reflect_data <- WISP.data::wisp_get_reflectance_multi_data(   time_from = \"2024-04-08T09:00\",   time_to = \"2024-04-10T14:00\",   station = \"WISPstation012\",   userid = userid,   pwd = pwd,   save_csv = FALSE )  # ---- # 9 spectral signatures were removed during QC: #  # - 5 spectral signatures were removed thanks to QC1 # - 4 spectral signatures were removed thanks to QC2 #  # The spectral signature of 2024-04-08 10:45:05 has been removed thanks to: QC2 # The spectral signature of 2024-04-08 11:00:05 has been removed thanks to: QC2 # The spectral signature of 2024-04-08 11:15:05 has been removed thanks to: QC2 # The spectral signature of 2024-04-08 11:30:05 has been removed thanks to: QC2 # The spectral signature of 2024-04-08 13:00:04 has been removed thanks to: QC1 # The spectral signature of 2024-04-08 13:15:05 has been removed thanks to: QC1 # The spectral signature of 2024-04-08 13:30:05 has been removed thanks to: QC1 # The spectral signature of 2024-04-08 13:45:04 has been removed thanks to: QC1 # The spectral signature of 2024-04-10 13:45:05 has been removed thanks to: QC1 #  # QC1 remove spectral signatures with negative values below 845 nm # QC2 remove spectral signatures with outliers in the NIR (840 nm > 700 nm) # ----"},{"path":"https://github.com/oggioniale/WISP.data/articles/exampleOfFunctions.html","id":"quality-check-qc-of-the-reflectance-data","dir":"Articles","previous_headings":"","what":"Quality Check (QC) of the reflectance data","title":"Example of WISP.data functions","text":"function save_csv parameter set TRUE, function save quality checked reflectance data .csv file ‘output’ folder within working directory.","code":"reflect_data_qc <- WISP.data::wisp_qc_reflectance_data(   data = reflect_data,   maxPeak = 0.05,   maxPeak_350 = 0.02,   calc_scatt = TRUE,   calc_SPM = TRUE,   calc_TUR = TRUE,   save_csv = FALSE )"},{"path":"https://github.com/oggioniale/WISP.data/articles/exampleOfFunctions.html","id":"sunglint-removal-sr-of-the-reflectance-data","dir":"Articles","previous_headings":"","what":"Sunglint Removal (SR) of the reflectance data","title":"Example of WISP.data functions","text":"function save_csv parameter set TRUE, function save reflectance data sunglint removed .csv file ‘output’ folder within working directory.","code":"reflect_data_sr <- WISP.data::wisp_sr_reflectance_data(   qc_data = reflect_data_qc,   calc_scatt = TRUE,   calc_SPM = TRUE,   calc_TUR = TRUE,   save_csv = FALSE )"},{"path":"https://github.com/oggioniale/WISP.data/articles/exampleOfFunctions.html","id":"plot-the-reflectance-data","dir":"Articles","previous_headings":"","what":"Plot the reflectance data","title":"Example of WISP.data functions","text":"","code":"WISP.data::wisp_plot_reflectance_data(   data = reflect_data_sr,   legend_TSM = TRUE,   legend_Chla = TRUE,   legend_Kd = FALSE,   legend_cpc = FALSE )"},{"path":"https://github.com/oggioniale/WISP.data/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alessandro Oggioni. Author, maintainer, funder. Nicola Ghirardi. Author.","code":""},{"path":"https://github.com/oggioniale/WISP.data/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alessandro Oggioni & Nicola Ghirardi.  (2024). WISP.data (v0.0.0.9000). Zenodo. https://doi.org/10.5281/zenodo.xxxxxx","code":"@Misc{,   title = {WISP.data},   author = {Alessandro Oggioni and Nicola Ghirardi},   year = {2025},   note = {R package version v0.0.0.9000}, }"},{"path":"https://github.com/oggioniale/WISP.data/index.html","id":"wispdata","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"repository designed store R functions downloading, performing quality control (QC), visualizing data WISP station.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/WISP.data-package.html","id":null,"dir":"Reference","previous_headings":"","what":"WISP.data: What the Package Does (One Line, Title Case) — WISP.data-package","title":"WISP.data: What the Package Does (One Line, Title Case) — WISP.data-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://github.com/oggioniale/WISP.data/reference/WISP.data-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WISP.data: What the Package Does (One Line, Title Case) — WISP.data-package","text":"Maintainer: Alessandro Oggioni alessandro.oggioni@cnr.(ORCID) [funder] Authors: Nicola Ghirardi nicola.ghirardi@cnr.(ORCID)","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data of reflectance (level2) from WISPstation for a specific date — wisp_get_reflectance_data","title":"Get data of reflectance (level2) from WISPstation for a specific date — wisp_get_reflectance_data","text":"function obtains data reflectance WISPstation specific date.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data of reflectance (level2) from WISPstation for a specific date — wisp_get_reflectance_data","text":"","code":"wisp_get_reflectance_data(   version = \"1.0\",   time_from = NULL,   time_to = NULL,   station = NULL,   userid = NULL,   pwd = NULL,   save_csv = FALSE,   out_dir = \"outputs\" )"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data of reflectance (level2) from WISPstation for a specific date — wisp_get_reflectance_data","text":"version character. version API data. Default \"1.0\" time_from character. date time data requested. time_to character. date time data requested. station character.  name station. userid character. userid access data service. pwd character. password access data service. save_csv logical. TRUE, function saves reflectance data. out_dir character. directory CSV file saved. Default \"outputs\" within working directory.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data of reflectance (level2) from WISPstation for a specific date — wisp_get_reflectance_data","text":"tibble measurement id, measurement date, instrument name, level2_quality, set sensor (irradiance radiances), waterquality values TSM, Chla, Kd, cpc provided instrument default, values reflectance wevelength 350 900 nm.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get data of reflectance (level2) from WISPstation for a specific date — wisp_get_reflectance_data","text":"Alessandro Oggioni, phD alessandro.oggioni@cnr.Nicola Ghirardi, phD nicola.ghirardi@cnr.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data of reflectance (level2) from WISPstation for a specific date — wisp_get_reflectance_data","text":"","code":"# example code if (FALSE) { ## Not run: # NA data reflect_data <- wisp_get_reflectance_data(   time_from = \"2024-09-01T09:00\",   time_to = \"2024-09-01T14:00\",   station = \"WISPstation012\",   userid = userid,   pwd = pwd )  # with data reflect_data <- wisp_get_reflectance_data(   time_from = \"2024-08-01T09:00\",   time_to = \"2024-08-01T14:00\",   station = \"WISPstation012\",   userid = userid,   pwd = pwd,   save_csv = FALSE )  # no data for the station selected reflect_data <- wisp_get_reflectance_data(   time_from = \"2019-06-20T09:00\",   time_to = \"2019-06-20T14:00\",   station = \"WISPstation012\",   userid = userid,   pwd = pwd )  # The two dates are not consistent reflect_data <- wisp_get_reflectance_data(   time_from = \"2019-06-20T09:00\",   time_to = \"2020-06-20T14:00\",   station = \"WISPstation012\",   userid = userid,   pwd = pwd ) } ## End (Not run)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_multi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data of reflectance (level2) from WISPstation for a multiple dates — wisp_get_reflectance_multi_data","title":"Get data of reflectance (level2) from WISPstation for a multiple dates — wisp_get_reflectance_multi_data","text":"function obtains data reflectance WISPstation multiple dates.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_multi_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data of reflectance (level2) from WISPstation for a multiple dates — wisp_get_reflectance_multi_data","text":"","code":"wisp_get_reflectance_multi_data(   version = \"1.0\",   time_from = NULL,   time_to = NULL,   station = NULL,   userid = NULL,   pwd = NULL,   save_csv = FALSE,   out_dir = \"outputs\" )"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_multi_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data of reflectance (level2) from WISPstation for a multiple dates — wisp_get_reflectance_multi_data","text":"version character. version API data. Default \"1.0\" time_from character. date time data requested. time_to character. date time data requested. station character.  name station. userid character. userid access data service. pwd character. password access data service. save_csv logical. TRUE, function saves reflectance data. out_dir character. directory CSV file saved. Default \"outputs\" within working directory.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_multi_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data of reflectance (level2) from WISPstation for a multiple dates — wisp_get_reflectance_multi_data","text":"tibble measurement id, measurement date, instrument name, level2_quality, set sensor (irradiance radiances), waterquality values TSM, Chla, Kd, cpc provided instrument default, values reflectance wevelength 350 900 nm.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_multi_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get data of reflectance (level2) from WISPstation for a multiple dates — wisp_get_reflectance_multi_data","text":"Alessandro Oggioni, phD alessandro.oggioni@cnr.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_get_reflectance_multi_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data of reflectance (level2) from WISPstation for a multiple dates — wisp_get_reflectance_multi_data","text":"","code":"# example code if (FALSE) { ## Not run: reflect_data <- wisp_get_reflectance_multi_data(   time_from = \"2024-04-08T09:00\",   time_to = \"2024-04-10T14:00\",   station = \"WISPstation012\",   userid = userid,   pwd = pwd,   save_csv = FALSE ) } ## End (Not run)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_SPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of SPM concentration (Novoa et al., 2017) — wisp_novoa_SPM","title":"Calculation of SPM concentration (Novoa et al., 2017) — wisp_novoa_SPM","text":"function calculates SPM concentration according Novoa et al., 2017 creates new columns qc_data e sr_data. calc_SPM can either TRUE (default) FALSE.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_SPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of SPM concentration (Novoa et al., 2017) — wisp_novoa_SPM","text":"","code":"wisp_novoa_SPM(qc_data, sr_data, calc_SPM = TRUE)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_SPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of SPM concentration (Novoa et al., 2017) — wisp_novoa_SPM","text":"qc_data tibble wisp_qc_reflectance_data() function. sr_data tibble wisp_sr_reflectance_data() function. calc_SPM logical. TRUE, function calculates NOVOA SPM concentrations. Default TRUE.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_SPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of SPM concentration (Novoa et al., 2017) — wisp_novoa_SPM","text":"result list two elements: ...","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_SPM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculation of SPM concentration (Novoa et al., 2017) — wisp_novoa_SPM","text":"Alessandro Oggioni, phD alessandro.oggioni@cnr.Nicola Ghirardi, phD nicola.ghirardi@cnr.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_SPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of SPM concentration (Novoa et al., 2017) — wisp_novoa_SPM","text":"","code":"# example code if (FALSE) { #' ## Not run:  # Calculate NOVOA_SPM novoa_SPM_results <- WISP.data::wisp_novoa_SPM(qc_data = reflect_data_qc, sr_data = reflect_data_sr, calc_SPM = T) reflect_data_qc <- novoa_SPM_results$qc_data reflect_data_sr <- novoa_SPM_results$sr_data  # Don't calculate NOVOA_SPM novoa_SPM_results <- WISP.data::wisp_novoa_SPM(qc_data = reflect_data_qc, sr_data = reflect_data_sr, calc_SPM = F) reflect_data_qc <- novoa_SPM_results$qc_data reflect_data_sr <- novoa_SPM_results$sr_data } ## End (Not run)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_TUR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Turbidity (FNU) (Novoa et al., 2017) — wisp_novoa_TUR","title":"Calculation of Turbidity (FNU) (Novoa et al., 2017) — wisp_novoa_TUR","text":"function calculates Turbidity (FNU) according Novoa et al., 2017 creates new columns qc_data e sr_data. calc_TUR can either TRUE (default) FALSE.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_TUR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Turbidity (FNU) (Novoa et al., 2017) — wisp_novoa_TUR","text":"","code":"wisp_novoa_TUR(qc_data, sr_data, calc_TUR = TRUE)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_TUR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Turbidity (FNU) (Novoa et al., 2017) — wisp_novoa_TUR","text":"qc_data tibble wisp_qc_reflectance_data() function. sr_data tibble wisp_sr_reflectance_data() function. calc_TUR logical. TRUE, function calculates NOVOA TUR values Default TRUE.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_TUR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Turbidity (FNU) (Novoa et al., 2017) — wisp_novoa_TUR","text":"result list two elements: ...","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_TUR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculation of Turbidity (FNU) (Novoa et al., 2017) — wisp_novoa_TUR","text":"Alessandro Oggioni, phD alessandro.oggioni@cnr.Nicola Ghirardi, phD nicola.ghirardi@cnr.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_novoa_TUR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of Turbidity (FNU) (Novoa et al., 2017) — wisp_novoa_TUR","text":"","code":"# example code if (FALSE) { ## Not run:  # Calculate NOVOA_SPM novoa_TUR_results <- WISP.data::wisp_novoa_TUR(qc_data = reflect_data_qc, sr_data = reflect_data_sr, calc_TUR = T) reflect_data_qc <- novoa_TUR_results$qc_data reflect_data_sr <- novoa_TUR_results$sr_data  # Don't calculate NOVOA_SPM novoa_TUR_results <- WISP.data::wisp_novoa_TUR(qc_data = reflect_data_qc, sr_data = reflect_data_sr, calc_TUR = F) reflect_data_qc <- novoa_TUR_results$qc_data reflect_data_sr <- novoa_TUR_results$sr_data } ## End (Not run)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_phyto_scattering.html","id":null,"dir":"Reference","previous_headings":"","what":"Phytoplankton Scattering for WISPstation reflectance data — wisp_phyto_scattering","title":"Phytoplankton Scattering for WISPstation reflectance data — wisp_phyto_scattering","text":"function calculates reflectance peak due phytoplankton scattering (690-710 nm) calculates ratio latter second chlorophyll absorption peak (670-680 nm). `calc_scatt``` can either TRUE (default) FALSE.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_phyto_scattering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phytoplankton Scattering for WISPstation reflectance data — wisp_phyto_scattering","text":"","code":"wisp_phyto_scattering(qc_data, sr_data, calc_scatt = TRUE)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_phyto_scattering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phytoplankton Scattering for WISPstation reflectance data — wisp_phyto_scattering","text":"qc_data tibble wisp_qc_reflectance_data() function. sr_data tibble wisp_sr_reflectance_data() function. calc_scatt logical. TRUE, function calculates two parameters. Default TRUE.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_phyto_scattering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phytoplankton Scattering for WISPstation reflectance data — wisp_phyto_scattering","text":"result list two elements: ...","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_phyto_scattering.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Phytoplankton Scattering for WISPstation reflectance data — wisp_phyto_scattering","text":"Alessandro Oggioni, phD alessandro.oggioni@cnr.Nicola Ghirardi, phD nicola.ghirardi@cnr.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_phyto_scattering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phytoplankton Scattering for WISPstation reflectance data — wisp_phyto_scattering","text":"","code":"# example code if (FALSE) { ## Not run:  # Calculate the two parameters scattering_results <- WISP.data::wisp_phyto_scattering(qc_data = reflect_data_qc, sr_data = reflect_data_sr, calc_scatt = T) reflect_data_qc <- scattering_results$qc_data reflect_data_sr <- scattering_results$sr_data  # Don't calculate the two parameters scattering_results <- WISP.data::wisp_phyto_scattering(qc_data = reflect_data_qc, sr_data = reflect_data_sr, calc_scatt = F) reflect_data_qc <- scattering_results$qc_data reflect_data_sr <- scattering_results$sr_data  } ## End (Not run)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_plot_reflectance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a plot of reflectance data — wisp_plot_reflectance_data","title":"Create a plot of reflectance data — wisp_plot_reflectance_data","text":"function return plotly spectral signature measured WISPstation.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_plot_reflectance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a plot of reflectance data — wisp_plot_reflectance_data","text":"","code":"wisp_plot_reflectance_data(   data,   legend_TSM = TRUE,   legend_Chla = TRUE,   legend_Kd = TRUE,   legend_cpc = TRUE )"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_plot_reflectance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a plot of reflectance data — wisp_plot_reflectance_data","text":"data tibble obtained functions provided package: wisp_get_reflectance_data(), QC SR removal operations. legend_TSM logical. TRUE, plot legend includes TSM values. Default TRUE. legend_Chla logical. TRUE, plot legend includes Chla values. Default TRUE. legend_Kd logical. TRUE, plot legend includes Kd values. Default TRUE. legend_cpc logical. TRUE, plot legend includes cpc values. Default TRUE.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_plot_reflectance_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a plot of reflectance data — wisp_plot_reflectance_data","text":"description plotly object spectral signatures reflectance data.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_plot_reflectance_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a plot of reflectance data — wisp_plot_reflectance_data","text":"Alessandro Oggioni, phD oggioni.@irea.cnr.Nicola Ghirardi, phD nicola.ghirardi@cnr.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_plot_reflectance_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a plot of reflectance data — wisp_plot_reflectance_data","text":"","code":"# example code if (FALSE) { ## Not run: wisp_plot_reflectance_data(   data = reflect_data_sr,   legend_TSM = FALSE,   legend_Chla = TRUE,   legend_Kd = FALSE,   legend_cpc = FALSE ) } ## End (Not run)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_qc_reflectance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality Control (QC) for WISPstation reflectance data — wisp_qc_reflectance_data","title":"Quality Control (QC) for WISPstation reflectance data — wisp_qc_reflectance_data","text":"function removes anomalous spectral signatures explains reason elimination","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_qc_reflectance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality Control (QC) for WISPstation reflectance data — wisp_qc_reflectance_data","text":"","code":"wisp_qc_reflectance_data(   data,   maxPeak = 0.05,   maxPeak_350 = 0.02,   calc_scatt = TRUE,   calc_SPM = TRUE,   calc_TUR = TRUE,   save_csv = FALSE,   out_dir = \"outputs\" )"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_qc_reflectance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality Control (QC) for WISPstation reflectance data — wisp_qc_reflectance_data","text":"data tibble. wisp_get_reflectance_data() function. maxPeak decimal. Maximum magnitude spectral signatures. recommend setting parameter : 0.02 clear oligotrophic water, 0.05 meso- eutrophic water, 0.08 hypereutrophic highly turbid water. Default 0.05. maxPeak_350 decimal. Maximum magnitude 350nm values. recommend setting parameter : 0.02 (default) calc_scatt logical. TRUE, function calculates two parameters. Default TRUE. calc_SPM logical. TRUE, function calculates NOVOA SPM concentrations. Default TRUE. calc_TUR logical. TRUE, function calculates NOVOA TUR values Default TRUE. save_csv logical. TRUE, function saves reflectance data. out_dir character. directory CSV file saved. Default \"outputs\" within working directory.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_qc_reflectance_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality Control (QC) for WISPstation reflectance data — wisp_qc_reflectance_data","text":"tibble spectral signatures passed QC operation. addition, message containing reason behind elimination anomalous spectral signature","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_qc_reflectance_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quality Control (QC) for WISPstation reflectance data — wisp_qc_reflectance_data","text":"Alessandro Oggioni, phD alessandro.oggioni@cnr.Nicola Ghirardi, phD nicola.ghirardi@cnr.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_qc_reflectance_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quality Control (QC) for WISPstation reflectance data — wisp_qc_reflectance_data","text":"","code":"# example code if (FALSE) { ## Not run: reflect_data_qc <- wisp_qc_reflectance_data(   data = reflect_data,   maxPeak = 0.05,   maxPeak_350 = 0.02,   calc_scatt = TRUE,   calc_SPM = FALSE,   calc_TUR = TRUE,   save_csv = FALSE ) } ## End (Not run)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_runApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run shiny app for get and visualize WISP data — wisp_runApp","title":"Run shiny app for get and visualize WISP data — wisp_runApp","text":"function run Shiny App","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_runApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run shiny app for get and visualize WISP data — wisp_runApp","text":"","code":"wisp_runApp(...)"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_runApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run shiny app for get and visualize WISP data — wisp_runApp","text":"... params passed shiny::runApp","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_runApp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run shiny app for get and visualize WISP data — wisp_runApp","text":"Alessandro Oggioni, phD alessandro.oggioni@cnr.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_runApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run shiny app for get and visualize WISP data — wisp_runApp","text":"","code":"# example code WISP.data::wisp_runApp(launch.browser = rstudioapi::viewer) #> Error: 'wisp_runApp' is not an exported object from 'namespace:WISP.data'"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_sr_reflectance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"SUNGLINT Removal (SR) for WISPstation reflectance data — wisp_sr_reflectance_data","title":"SUNGLINT Removal (SR) for WISPstation reflectance data — wisp_sr_reflectance_data","text":"function applies algorithm Jiang et al., (2020) removing sunglint spectral signatures","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_sr_reflectance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SUNGLINT Removal (SR) for WISPstation reflectance data — wisp_sr_reflectance_data","text":"","code":"wisp_sr_reflectance_data(   qc_data,   calc_scatt = TRUE,   calc_SPM = TRUE,   calc_TUR = TRUE,   save_csv = FALSE,   out_dir = \"outputs\" )"},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_sr_reflectance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SUNGLINT Removal (SR) for WISPstation reflectance data — wisp_sr_reflectance_data","text":"qc_data tibble wisp_qc_reflectance_data() function. calc_scatt logical. TRUE, function calculates two parameters. Default TRUE. calc_SPM logical. TRUE, function calculates NOVOA SPM concentrations. Default TRUE. calc_TUR logical. TRUE, function calculates NOVOA TUR values Default TRUE. save_csv logical. TRUE, function saves reflectance data. out_dir character. directory CSV file saved. Default \"outputs\" within working directory.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_sr_reflectance_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SUNGLINT Removal (SR) for WISPstation reflectance data — wisp_sr_reflectance_data","text":"tibble spectral signatures SR operation , parameter save_out_sr TRUE, function saves reflectance data CSV file.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_sr_reflectance_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SUNGLINT Removal (SR) for WISPstation reflectance data — wisp_sr_reflectance_data","text":"Alessandro Oggioni, phD alessandro.oggioni@cnr.Nicola Ghirardi, phD nicola.ghirardi@cnr.","code":""},{"path":"https://github.com/oggioniale/WISP.data/reference/wisp_sr_reflectance_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SUNGLINT Removal (SR) for WISPstation reflectance data — wisp_sr_reflectance_data","text":"","code":"# example code if (FALSE) { ## Not run: reflect_data_sr <- wisp_sr_reflectance_data(   qc_data = reflect_data_qc,   calc_scatt = TRUE,   calc_SPM = TRUE,   calc_TUR = TRUE,   save_csv = FALSE ) } ## End (Not run)"}]
